$schema: https://raw.githubusercontent.com/finos-labs/architecture-as-code/main/calm/draft/2024-03/meta/calm.json
nodes:
  - unique-id: traderx-system
    node-type: system
    name: TraderX
    description: Simple Trading System
  - unique-id: traderx-trader
    node-type: actor
    name: Trader
    description: Person who manages accounts and executes trades
  - unique-id: web-client
    node-type: webclient
    name: Web Client
    description: Browser based web interface for TraderX
    data-classification: Confidential
    run-as: user
  - unique-id: web-gui-process
    node-type: service
    name: Web GUI
    description: Backend service for the Web Client
    data-classification: Confidential
    run-as: systemId
  - unique-id: position-service
    node-type: service
    name: Position Service
    description: Server process which processes trading activity and updates positions
    data-classification: Confidential
    run-as: systemId
  - unique-id: traderx-db
    node-type: database
    name: TraderX DB
    description: Database which stores account, trade and position state
    data-classification: Confidential
    run-as: systemId
  - unique-id: internal-bank-network
    node-type: internal-network
    name: Bank ABC Internal Network
    description: Internal network for Bank ABC
    instance: Internal Network
  - unique-id: reference-data-service
    node-type: service
    name: Reference Data Service
    description: Service which provides reference data
    data-classification: Confidential
    run-as: systemId
  - unique-id: trading-services
    node-type: service
    name: Trading Services
    description: Service which provides trading services
    data-classification: Confidential
    run-as: systemId
  - unique-id: trade-feed
    node-type: service
    name: Trade Feed
    description: Message bus for streaming updates to trades and positions
    data-classification: Confidential
    run-as: systemId
  - unique-id: trade-processor
    node-type: service
    name: Trade Processor
    description: Process incoming trade requests, settle and persist
    data-classification: Confidential
    run-as: systemId
  - unique-id: accounts-service
    node-type: service
    name: Accounts Service
    description: Service which provides account management
    data-classification: Confidential
    run-as: systemId
  - unique-id: people-service
    node-type: service
    name: People Service
    description: Service which provides user details management
    data-classification: Confidential
    run-as: systemId
  - unique-id: user-directory
    node-type: ldap
    name: User Directory
    description: Golden source of user data
    data-classification: PII
    run-as: systemId
relationships:
  - unique-id: trader-uses-web-client
    relationship-type:
      interacts:
        actor: traderx-trader
        nodes:
          - web-client
  - unique-id: web-client-uses-web-gui
    relationship-type:
      connects:
        source: web-client
        destination: web-gui-process
    protocol: HTTPS
    authentication: OAuth2
  - unique-id: web-gui-uses-position-service
    relationship-type:
      connects:
        source: web-gui-process
        destination: position-service
    protocol: HTTPS
    authentication: SPNEGO
  - unique-id: position-service-uses-traderx-db
    relationship-type:
      connects:
        source: position-service
        destination: traderx-db
    protocol: JDBC
    authentication: Kerberos
  - unique-id: traderx-system-is-deployed-in-internal-bank-network
    relationship-type:
      deployed-in:
        nodes:
          - traderx-system
        container: internal-bank-network
  - unique-id: traderx-system-is-composed-of
    relationship-type:
      composed-of:
        nodes:
          - web-client
          - web-gui-process
          - position-service
          - traderx-db
        container: traderx-system
  - unique-id: traderx-system-components-are-deployed-in-internal-bank-network
    relationship-type:
      deployed-in:
        nodes:
          - web-client
          - web-gui-process
          - position-service
          - traderx-db
        container: internal-bank-network
  - unique-id: webgui-process-uses-reference-data-service
    relationship-type:
      connects:
        source: web-gui-process
        destination: reference-data-service
    protocol: HTTPS
    authentication: SPNEGO
  - unique-id: webgui-process-uses-trading-services
    relationship-type:
      connects:
        source: web-gui-process
        destination: trading-services
    protocol: HTTPS
    authentication: SPNEGO
  - unique-id: webgui-process-uses-trade-feed
    relationship-type:
      connects:
        source: web-gui-process
        destination: trade-feed
    protocol: WebSocket
    authentication: Kerberos
  - unique-id: trade-feed-connects-to-trade-processor
    relationship-type:
      connects:
        source: trade-feed
        destination: trade-processor
    protocol: AMQP
    authentication: Kerberos
  - unique-id: trade-processor-connects-to-traderx-db
    relationship-type:
      connects:
        source: trade-processor
        destination: traderx-db
    protocol: JDBC
    authentication: Kerberos
  - unique-id: webgui-process-uses-accounts-service
    relationship-type:
      connects:
        source: web-gui-process
        destination: accounts-service
    protocol: HTTPS
    authentication: SPNEGO
  - unique-id: webgui-process-uses-people-service
    relationship-type:
      connects:
        source: web-gui-process
        destination: people-service
    protocol: HTTPS
    authentication: SPNEGO
  - unique-id: people-service-connects-to-user-directory
    relationship-type:
      connects:
        source: people-service
        destination: user-directory
    protocol: LDAP
    authentication: Kerberos
